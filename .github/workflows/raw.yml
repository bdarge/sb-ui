# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: raw

on:
  release:
    types:
      - published
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
#  test:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#    container: buildkite/puppeteer:latest
#    strategy:
#      matrix:
#        node-version: [16.x]
#
#    defaults:
#      run:
#        working-directory: .
#    steps:
#      - uses: actions/checkout@v2
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#      - run: npm ci
#      - run: npm run test
  build-and-push-image:
    runs-on: ubuntu-latest
#    needs: test
    permissions:
      contents: read
      packages: write
    env:
      NODE_ENV: PROD
      IMAGE_NAME: sb-ui
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.2.0

      - name: Build image
        run: docker buildx build --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}" --target prod --platform linux/arm64 .

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login "${{ env.REGISTRY }}" -u $ --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
